/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.applicationmvc.viewAdmin;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dhmty
 */
public class JPanel_TKDBD extends javax.swing.JPanel {

    /**
     * Creates new form JPanel_TKDBD
     */
    public JPanel_TKDBD() {
        initComponents();
        importDataTKDBD();
        importDataMaNV();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_DanhSachDBD = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jComboBox_Ngay1 = new javax.swing.JComboBox<>();
        jComboBox_Thang1 = new javax.swing.JComboBox<>();
        jComboBox_Nam1 = new javax.swing.JComboBox<>();
        jLabel_pc1 = new javax.swing.JLabel();
        jLabel_pc2 = new javax.swing.JLabel();
        jComboBox_Ngay2 = new javax.swing.JComboBox<>();
        jComboBox_Thang2 = new javax.swing.JComboBox<>();
        jComboBox_Nam2 = new javax.swing.JComboBox<>();
        jLabel_pc3 = new javax.swing.JLabel();
        jLabel_pc4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jComboBox_SapXep = new javax.swing.JComboBox<>();
        jButton_XNDBD = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jComboBox_TrangThai = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jTextField_Gia1 = new javax.swing.JTextField();
        jTextField_Gia2 = new javax.swing.JTextField();
        jComboBox_IDNV1 = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jTextField_FindID = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField_TongDT = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "THỐNG KÊ ĐƠN BẢO DƯỠNG", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        setMaximumSize(new java.awt.Dimension(1300, 720));
        setMinimumSize(new java.awt.Dimension(1300, 720));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(1300, 720));

        jTable_DanhSachDBD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Biển Số", "Ngày Bắt Đầu", "Ngày Hoàn Thành", "Trạng Thái", "ID NV Lập", "Nhân Viên Lập Đơn", "Tổng Tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Short.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_DanhSachDBD.setRowHeight(30);
        jScrollPane1.setViewportView(jTable_DanhSachDBD);
        if (jTable_DanhSachDBD.getColumnModel().getColumnCount() > 0) {
            jTable_DanhSachDBD.getColumnModel().getColumn(0).setMaxWidth(70);
            jTable_DanhSachDBD.getColumnModel().getColumn(5).setMinWidth(70);
        }

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel11.setForeground(new java.awt.Color(204, 204, 204));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setText("THỐNG KÊ HÓA ĐƠN BẢO DƯỠNG");

        jPanel12.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel5.setText("Bắt Đầu Từ: Ngày");

        jLabel12.setText("Đến: Ngày");

        jComboBox_Ngay1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        jComboBox_Ngay1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_Ngay1ActionPerformed(evt);
            }
        });

        jComboBox_Thang1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        jComboBox_Nam1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "100", "101", "102", "103", "104", "105", "106", "107", "108", "109", "110", "111", "112", "113", "114", "115", "116", "117", "118", "119", "120", "121", "122", "123", "124", "125", "126", "127", "128", "129", "130", "131", "132", "133", "134", "135", "136", "137", "138", "139", "140", "141", "142", "143", "144", "145", "146", "147", "148", "149", "150", "151", "152", "153", "154", "155", "156", "157", "158", "159", "160", "161", "162", "163", "164", "165", "166", "167", "168", "169", "170", "171", "172", "173", "174", "175", "176", "177", "178", "179", "180", "181", "182", "183", "184", "185", "186", "187", "188", "189", "190", "191", "192", "193", "194", "195", "196", "197", "198", "199", "200", "201", "202", "203", "204", "205", "206", "207", "208", "209", "210", "211", "212", "213", "214", "215", "216", "217", "218", "219", "220", "221", "222", "223", "224", "225", "226", "227", "228", "229", "230", "231", "232", "233", "234", "235", "236", "237", "238", "239", "240", "241", "242", "243", "244", "245", "246", "247", "248", "249", "250", "251", "252", "253", "254", "255", "256", "257", "258", "259", "260", "261", "262", "263", "264", "265", "266", "267", "268", "269", "270", "271", "272", "273", "274", "275", "276", "277", "278", "279", "280", "281", "282", "283", "284", "285", "286", "287", "288", "289", "290", "291", "292", "293", "294", "295", "296", "297", "298", "299", "300", "301", "302", "303", "304", "305", "306", "307", "308", "309", "310", "311", "312", "313", "314", "315", "316", "317", "318", "319", "320", "321", "322", "323", "324", "325", "326", "327", "328", "329", "330", "331", "332", "333", "334", "335", "336", "337", "338", "339", "340", "341", "342", "343", "344", "345", "346", "347", "348", "349", "350", "351", "352", "353", "354", "355", "356", "357", "358", "359", "360", "361", "362", "363", "364", "365", "366", "367", "368", "369", "370", "371", "372", "373", "374", "375", "376", "377", "378", "379", "380", "381", "382", "383", "384", "385", "386", "387", "388", "389", "390", "391", "392", "393", "394", "395", "396", "397", "398", "399", "400", "401", "402", "403", "404", "405", "406", "407", "408", "409", "410", "411", "412", "413", "414", "415", "416", "417", "418", "419", "420", "421", "422", "423", "424", "425", "426", "427", "428", "429", "430", "431", "432", "433", "434", "435", "436", "437", "438", "439", "440", "441", "442", "443", "444", "445", "446", "447", "448", "449", "450", "451", "452", "453", "454", "455", "456", "457", "458", "459", "460", "461", "462", "463", "464", "465", "466", "467", "468", "469", "470", "471", "472", "473", "474", "475", "476", "477", "478", "479", "480", "481", "482", "483", "484", "485", "486", "487", "488", "489", "490", "491", "492", "493", "494", "495", "496", "497", "498", "499", "500", "501", "502", "503", "504", "505", "506", "507", "508", "509", "510", "511", "512", "513", "514", "515", "516", "517", "518", "519", "520", "521", "522", "523", "524", "525", "526", "527", "528", "529", "530", "531", "532", "533", "534", "535", "536", "537", "538", "539", "540", "541", "542", "543", "544", "545", "546", "547", "548", "549", "550", "551", "552", "553", "554", "555", "556", "557", "558", "559", "560", "561", "562", "563", "564", "565", "566", "567", "568", "569", "570", "571", "572", "573", "574", "575", "576", "577", "578", "579", "580", "581", "582", "583", "584", "585", "586", "587", "588", "589", "590", "591", "592", "593", "594", "595", "596", "597", "598", "599", "600", "601", "602", "603", "604", "605", "606", "607", "608", "609", "610", "611", "612", "613", "614", "615", "616", "617", "618", "619", "620", "621", "622", "623", "624", "625", "626", "627", "628", "629", "630", "631", "632", "633", "634", "635", "636", "637", "638", "639", "640", "641", "642", "643", "644", "645", "646", "647", "648", "649", "650", "651", "652", "653", "654", "655", "656", "657", "658", "659", "660", "661", "662", "663", "664", "665", "666", "667", "668", "669", "670", "671", "672", "673", "674", "675", "676", "677", "678", "679", "680", "681", "682", "683", "684", "685", "686", "687", "688", "689", "690", "691", "692", "693", "694", "695", "696", "697", "698", "699", "700", "701", "702", "703", "704", "705", "706", "707", "708", "709", "710", "711", "712", "713", "714", "715", "716", "717", "718", "719", "720", "721", "722", "723", "724", "725", "726", "727", "728", "729", "730", "731", "732", "733", "734", "735", "736", "737", "738", "739", "740", "741", "742", "743", "744", "745", "746", "747", "748", "749", "750", "751", "752", "753", "754", "755", "756", "757", "758", "759", "760", "761", "762", "763", "764", "765", "766", "767", "768", "769", "770", "771", "772", "773", "774", "775", "776", "777", "778", "779", "780", "781", "782", "783", "784", "785", "786", "787", "788", "789", "790", "791", "792", "793", "794", "795", "796", "797", "798", "799", "800", "801", "802", "803", "804", "805", "806", "807", "808", "809", "810", "811", "812", "813", "814", "815", "816", "817", "818", "819", "820", "821", "822", "823", "824", "825", "826", "827", "828", "829", "830", "831", "832", "833", "834", "835", "836", "837", "838", "839", "840", "841", "842", "843", "844", "845", "846", "847", "848", "849", "850", "851", "852", "853", "854", "855", "856", "857", "858", "859", "860", "861", "862", "863", "864", "865", "866", "867", "868", "869", "870", "871", "872", "873", "874", "875", "876", "877", "878", "879", "880", "881", "882", "883", "884", "885", "886", "887", "888", "889", "890", "891", "892", "893", "894", "895", "896", "897", "898", "899", "900", "901", "902", "903", "904", "905", "906", "907", "908", "909", "910", "911", "912", "913", "914", "915", "916", "917", "918", "919", "920", "921", "922", "923", "924", "925", "926", "927", "928", "929", "930", "931", "932", "933", "934", "935", "936", "937", "938", "939", "940", "941", "942", "943", "944", "945", "946", "947", "948", "949", "950", "951", "952", "953", "954", "955", "956", "957", "958", "959", "960", "961", "962", "963", "964", "965", "966", "967", "968", "969", "970", "971", "972", "973", "974", "975", "976", "977", "978", "979", "980", "981", "982", "983", "984", "985", "986", "987", "988", "989", "990", "991", "992", "993", "994", "995", "996", "997", "998", "999", "1000", "1001", "1002", "1003", "1004", "1005", "1006", "1007", "1008", "1009", "1010", "1011", "1012", "1013", "1014", "1015", "1016", "1017", "1018", "1019", "1020", "1021", "1022", "1023", "1024", "1025", "1026", "1027", "1028", "1029", "1030", "1031", "1032", "1033", "1034", "1035", "1036", "1037", "1038", "1039", "1040", "1041", "1042", "1043", "1044", "1045", "1046", "1047", "1048", "1049", "1050", "1051", "1052", "1053", "1054", "1055", "1056", "1057", "1058", "1059", "1060", "1061", "1062", "1063", "1064", "1065", "1066", "1067", "1068", "1069", "1070", "1071", "1072", "1073", "1074", "1075", "1076", "1077", "1078", "1079", "1080", "1081", "1082", "1083", "1084", "1085", "1086", "1087", "1088", "1089", "1090", "1091", "1092", "1093", "1094", "1095", "1096", "1097", "1098", "1099", "1100", "1101", "1102", "1103", "1104", "1105", "1106", "1107", "1108", "1109", "1110", "1111", "1112", "1113", "1114", "1115", "1116", "1117", "1118", "1119", "1120", "1121", "1122", "1123", "1124", "1125", "1126", "1127", "1128", "1129", "1130", "1131", "1132", "1133", "1134", "1135", "1136", "1137", "1138", "1139", "1140", "1141", "1142", "1143", "1144", "1145", "1146", "1147", "1148", "1149", "1150", "1151", "1152", "1153", "1154", "1155", "1156", "1157", "1158", "1159", "1160", "1161", "1162", "1163", "1164", "1165", "1166", "1167", "1168", "1169", "1170", "1171", "1172", "1173", "1174", "1175", "1176", "1177", "1178", "1179", "1180", "1181", "1182", "1183", "1184", "1185", "1186", "1187", "1188", "1189", "1190", "1191", "1192", "1193", "1194", "1195", "1196", "1197", "1198", "1199", "1200", "1201", "1202", "1203", "1204", "1205", "1206", "1207", "1208", "1209", "1210", "1211", "1212", "1213", "1214", "1215", "1216", "1217", "1218", "1219", "1220", "1221", "1222", "1223", "1224", "1225", "1226", "1227", "1228", "1229", "1230", "1231", "1232", "1233", "1234", "1235", "1236", "1237", "1238", "1239", "1240", "1241", "1242", "1243", "1244", "1245", "1246", "1247", "1248", "1249", "1250", "1251", "1252", "1253", "1254", "1255", "1256", "1257", "1258", "1259", "1260", "1261", "1262", "1263", "1264", "1265", "1266", "1267", "1268", "1269", "1270", "1271", "1272", "1273", "1274", "1275", "1276", "1277", "1278", "1279", "1280", "1281", "1282", "1283", "1284", "1285", "1286", "1287", "1288", "1289", "1290", "1291", "1292", "1293", "1294", "1295", "1296", "1297", "1298", "1299", "1300", "1301", "1302", "1303", "1304", "1305", "1306", "1307", "1308", "1309", "1310", "1311", "1312", "1313", "1314", "1315", "1316", "1317", "1318", "1319", "1320", "1321", "1322", "1323", "1324", "1325", "1326", "1327", "1328", "1329", "1330", "1331", "1332", "1333", "1334", "1335", "1336", "1337", "1338", "1339", "1340", "1341", "1342", "1343", "1344", "1345", "1346", "1347", "1348", "1349", "1350", "1351", "1352", "1353", "1354", "1355", "1356", "1357", "1358", "1359", "1360", "1361", "1362", "1363", "1364", "1365", "1366", "1367", "1368", "1369", "1370", "1371", "1372", "1373", "1374", "1375", "1376", "1377", "1378", "1379", "1380", "1381", "1382", "1383", "1384", "1385", "1386", "1387", "1388", "1389", "1390", "1391", "1392", "1393", "1394", "1395", "1396", "1397", "1398", "1399", "1400", "1401", "1402", "1403", "1404", "1405", "1406", "1407", "1408", "1409", "1410", "1411", "1412", "1413", "1414", "1415", "1416", "1417", "1418", "1419", "1420", "1421", "1422", "1423", "1424", "1425", "1426", "1427", "1428", "1429", "1430", "1431", "1432", "1433", "1434", "1435", "1436", "1437", "1438", "1439", "1440", "1441", "1442", "1443", "1444", "1445", "1446", "1447", "1448", "1449", "1450", "1451", "1452", "1453", "1454", "1455", "1456", "1457", "1458", "1459", "1460", "1461", "1462", "1463", "1464", "1465", "1466", "1467", "1468", "1469", "1470", "1471", "1472", "1473", "1474", "1475", "1476", "1477", "1478", "1479", "1480", "1481", "1482", "1483", "1484", "1485", "1486", "1487", "1488", "1489", "1490", "1491", "1492", "1493", "1494", "1495", "1496", "1497", "1498", "1499", "1500", "1501", "1502", "1503", "1504", "1505", "1506", "1507", "1508", "1509", "1510", "1511", "1512", "1513", "1514", "1515", "1516", "1517", "1518", "1519", "1520", "1521", "1522", "1523", "1524", "1525", "1526", "1527", "1528", "1529", "1530", "1531", "1532", "1533", "1534", "1535", "1536", "1537", "1538", "1539", "1540", "1541", "1542", "1543", "1544", "1545", "1546", "1547", "1548", "1549", "1550", "1551", "1552", "1553", "1554", "1555", "1556", "1557", "1558", "1559", "1560", "1561", "1562", "1563", "1564", "1565", "1566", "1567", "1568", "1569", "1570", "1571", "1572", "1573", "1574", "1575", "1576", "1577", "1578", "1579", "1580", "1581", "1582", "1583", "1584", "1585", "1586", "1587", "1588", "1589", "1590", "1591", "1592", "1593", "1594", "1595", "1596", "1597", "1598", "1599", "1600", "1601", "1602", "1603", "1604", "1605", "1606", "1607", "1608", "1609", "1610", "1611", "1612", "1613", "1614", "1615", "1616", "1617", "1618", "1619", "1620", "1621", "1622", "1623", "1624", "1625", "1626", "1627", "1628", "1629", "1630", "1631", "1632", "1633", "1634", "1635", "1636", "1637", "1638", "1639", "1640", "1641", "1642", "1643", "1644", "1645", "1646", "1647", "1648", "1649", "1650", "1651", "1652", "1653", "1654", "1655", "1656", "1657", "1658", "1659", "1660", "1661", "1662", "1663", "1664", "1665", "1666", "1667", "1668", "1669", "1670", "1671", "1672", "1673", "1674", "1675", "1676", "1677", "1678", "1679", "1680", "1681", "1682", "1683", "1684", "1685", "1686", "1687", "1688", "1689", "1690", "1691", "1692", "1693", "1694", "1695", "1696", "1697", "1698", "1699", "1700", "1701", "1702", "1703", "1704", "1705", "1706", "1707", "1708", "1709", "1710", "1711", "1712", "1713", "1714", "1715", "1716", "1717", "1718", "1719", "1720", "1721", "1722", "1723", "1724", "1725", "1726", "1727", "1728", "1729", "1730", "1731", "1732", "1733", "1734", "1735", "1736", "1737", "1738", "1739", "1740", "1741", "1742", "1743", "1744", "1745", "1746", "1747", "1748", "1749", "1750", "1751", "1752", "1753", "1754", "1755", "1756", "1757", "1758", "1759", "1760", "1761", "1762", "1763", "1764", "1765", "1766", "1767", "1768", "1769", "1770", "1771", "1772", "1773", "1774", "1775", "1776", "1777", "1778", "1779", "1780", "1781", "1782", "1783", "1784", "1785", "1786", "1787", "1788", "1789", "1790", "1791", "1792", "1793", "1794", "1795", "1796", "1797", "1798", "1799", "1800", "1801", "1802", "1803", "1804", "1805", "1806", "1807", "1808", "1809", "1810", "1811", "1812", "1813", "1814", "1815", "1816", "1817", "1818", "1819", "1820", "1821", "1822", "1823", "1824", "1825", "1826", "1827", "1828", "1829", "1830", "1831", "1832", "1833", "1834", "1835", "1836", "1837", "1838", "1839", "1840", "1841", "1842", "1843", "1844", "1845", "1846", "1847", "1848", "1849", "1850", "1851", "1852", "1853", "1854", "1855", "1856", "1857", "1858", "1859", "1860", "1861", "1862", "1863", "1864", "1865", "1866", "1867", "1868", "1869", "1870", "1871", "1872", "1873", "1874", "1875", "1876", "1877", "1878", "1879", "1880", "1881", "1882", "1883", "1884", "1885", "1886", "1887", "1888", "1889", "1890", "1891", "1892", "1893", "1894", "1895", "1896", "1897", "1898", "1899", "1900", "1901", "1902", "1903", "1904", "1905", "1906", "1907", "1908", "1909", "1910", "1911", "1912", "1913", "1914", "1915", "1916", "1917", "1918", "1919", "1920", "1921", "1922", "1923", "1924", "1925", "1926", "1927", "1928", "1929", "1930", "1931", "1932", "1933", "1934", "1935", "1936", "1937", "1938", "1939", "1940", "1941", "1942", "1943", "1944", "1945", "1946", "1947", "1948", "1949", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021" }));
        jComboBox_Nam1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_Nam1ActionPerformed(evt);
            }
        });

        jLabel_pc1.setText("/");

        jLabel_pc2.setText("/");

        jComboBox_Ngay2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        jComboBox_Ngay2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_Ngay2ActionPerformed(evt);
            }
        });

        jComboBox_Thang2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        jComboBox_Nam2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        jComboBox_Nam2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_Nam2ActionPerformed(evt);
            }
        });

        jLabel_pc3.setText("/");

        jLabel_pc4.setText("/");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox_Ngay1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_pc1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox_Thang1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_pc2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox_Nam1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox_Ngay2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_pc3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox_Thang2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_pc4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox_Nam2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox_Ngay2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel_pc3)
                        .addComponent(jComboBox_Thang2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel_pc4)
                        .addComponent(jComboBox_Nam2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel12)
                        .addComponent(jComboBox_Ngay1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel_pc1)
                        .addComponent(jComboBox_Thang1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel_pc2)
                        .addComponent(jComboBox_Nam1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Calendar c= Calendar.getInstance();
        int ng=c.get(Calendar.DAY_OF_MONTH);
        String ng1=String.valueOf(ng);
        jComboBox_Ngay1.setSelectedItem("1");
        int th=c.get(Calendar.MONTH) + 1 ;
        String th1=String.valueOf(th);
        jComboBox_Thang1.setSelectedItem("1");
        int nam=c.get(Calendar.YEAR);
        String nam1=String.valueOf(nam);
        jComboBox_Nam1.setSelectedItem("2000");
        jComboBox_Ngay2.setSelectedItem(ng1);
        jComboBox_Thang2.setSelectedItem(th1);
        jComboBox_Nam2.setSelectedItem(nam1);

        jLabel11.setText("Tổng giá:  Từ");
        jLabel11.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel13.setText("Đến");
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel14.setText("Sắp Xếp theo Chiều Tổng Giá");
        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jComboBox_SapXep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Không", "Tăng dần", "Giảm dần" }));
        jComboBox_SapXep.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButton_XNDBD.setBackground(new java.awt.Color(102, 255, 204));
        jButton_XNDBD.setText("Xác Nhận");
        jButton_XNDBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_XNDBDActionPerformed(evt);
            }
        });

        jLabel16.setText("Trạng Thái");
        jLabel16.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jComboBox_TrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Hoàn Thành", "Chưa Hoàn Thành" }));
        jComboBox_TrangThai.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jComboBox_TrangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_TrangThaiActionPerformed(evt);
            }
        });

        jLabel10.setText("Mã Nhân Viên Lập ");
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTextField_Gia1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_Gia1ActionPerformed(evt);
            }
        });
        jTextField_Gia1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_Gia1KeyReleased(evt);
            }
        });

        jTextField_Gia2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_Gia2ActionPerformed(evt);
            }
        });
        jTextField_Gia2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_Gia2KeyReleased(evt);
            }
        });

        jComboBox_IDNV1.setEditable(true);
        jComboBox_IDNV1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất Cả" }));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(393, 393, 393)
                        .addComponent(jButton_XNDBD, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(252, 252, 252)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_Gia1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_Gia2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox_IDNV1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox_SapXep, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox_TrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(168, 168, 168))))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(jComboBox_IDNV1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jComboBox_SapXep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(jLabel13)
                        .addComponent(jTextField_Gia1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_Gia2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jComboBox_TrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_XNDBD)
                .addContainerGap())
        );

        jLabel15.setText("Tìm Kiếm Mã Đơn Bảo Dưỡng");

        jTextField_FindID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_FindIDActionPerformed(evt);
            }
        });
        jTextField_FindID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_FindIDKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_FindIDKeyReleased(evt);
            }
        });

        jLabel18.setText("Tổng Doanh Thu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(201, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jTextField_FindID, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(402, 402, 402))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addGap(213, 213, 213))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField_TongDT, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(224, 224, 224))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_FindID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jTextField_TongDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox_Ngay1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_Ngay1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_Ngay1ActionPerformed

    private void jComboBox_Nam1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_Nam1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_Nam1ActionPerformed

    private void jComboBox_Ngay2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_Ngay2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_Ngay2ActionPerformed

    private void jComboBox_Nam2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_Nam2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_Nam2ActionPerformed

    private void jButton_XNDBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_XNDBDActionPerformed
        // TODO add your handling code here:
        boolean kt=true;
        //Bắt lỗi ngày tháng
        String dn= (String) jComboBox_Ngay1.getSelectedItem();
        int d1=Integer.parseInt(dn);
        String mn= (String) jComboBox_Thang1.getSelectedItem();
        int m1=Integer.parseInt(mn);
        String yn= (String) jComboBox_Nam1.getSelectedItem();
        int y1=Integer.parseInt(yn);
        String dn1= (String) jComboBox_Ngay2.getSelectedItem();
        int d2=Integer.parseInt(dn1);
        String mn1= (String) jComboBox_Thang2.getSelectedItem();
        int m2=Integer.parseInt(mn1);
        String yn1= (String) jComboBox_Nam2.getSelectedItem();
        int y2=Integer.parseInt(yn1);
        if (!ControllerAdmin.Check_Date(d1, m1, y1) || !ControllerAdmin.Check_Date(d2, m2, y2)){
            kt=false;
            JOptionPane.showMessageDialog(this, "Ngày Tháng Năm Không Hợp Lệ");
        }
        if (ControllerAdmin.Compare_Date(d1, m1, y1, d2, m2, y2)==1 && kt){
            kt=false;
            JOptionPane.showMessageDialog(this, "Ngày Tháng Năm Bắt Đầu phải nhỏ hơn Ngày Kết Thúc");
        }

        //Bắt lỗi nhập mã nhân viên
        String id_nv=(String)jComboBox_IDNV1.getSelectedItem();
        // cắt lấy cái đầu
        String id_nv1[]=id_nv.split("\\s");
        id_nv=id_nv1[0];
        int idnv=jComboBox_IDNV1.getSelectedIndex();
        if (idnv!=0 && kt){
            if (!id_nv.matches("\\d+") ){
                JOptionPane.showMessageDialog(this, "Mã Nhân Viên Phải Là Một Số Tự Nhiên");
                jComboBox_IDNV1.setSelectedIndex(0);
            }
            else if (ControllerAdmin.ktID_NV(Integer.parseInt(id_nv))!=1 ){
                JOptionPane.showMessageDialog(this, "Mã Nhân Viên Không tồn tại");
                jComboBox_IDNV1.setSelectedIndex(0);
            }
        }
        this.importDataTKDBD();
    }//GEN-LAST:event_jButton_XNDBDActionPerformed

    private void jComboBox_TrangThaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_TrangThaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_TrangThaiActionPerformed

    private void jTextField_Gia1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_Gia1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_Gia1ActionPerformed

    private void jTextField_Gia1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_Gia1KeyReleased
        // TODO add your handling code here:
        String g1=jTextField_Gia1.getText();
        if (!g1.matches("\\d+") && !g1.equals("")){
            JOptionPane.showMessageDialog(this, "Giá tiền không chứa chữ cái");
            jTextField_Gia1.setText("");
        }
    }//GEN-LAST:event_jTextField_Gia1KeyReleased

    private void jTextField_Gia2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_Gia2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_Gia2ActionPerformed

    private void jTextField_Gia2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_Gia2KeyReleased
        String g2=jTextField_Gia2.getText();
        if (!g2.matches("\\d+") && !g2.equals("")){
            JOptionPane.showMessageDialog(this, "Giá tiền không chứa chữ cái");
            jTextField_Gia2.setText("");
        }
    }//GEN-LAST:event_jTextField_Gia2KeyReleased

    private void jTextField_FindIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_FindIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_FindIDActionPerformed

    private void jTextField_FindIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_FindIDKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_FindIDKeyPressed

    private void jTextField_FindIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_FindIDKeyReleased
        // TODO add your handling code here:
        String s=jTextField_FindID.getText();
        DefaultTableModel dtm= (DefaultTableModel) jTable_DanhSachDBD.getModel();
        dtm.setNumRows(0);
        long dt=0;
        Connection cn=ModelAdmin.connectMSSQL();
        String id_nv=(String)jComboBox_IDNV1.getSelectedItem();
        String id_nv1[]=id_nv.split("\\s");
        id_nv=id_nv1[0];
        int i=(int)jComboBox_IDNV1.getSelectedIndex();
        //---------------------Xử lý sắp xếp-------------------------
        String sql=
                    "select DonBaoDuong.id,BienSo,NgayBatDau,NgayHoanThanh,idNhanVienLapDon,Ten,TongTien from DonBaoDuong,NhanVien\n"+
                   "Where DonBaoDuong.idNhanVienLapDon=NhanVien.id";
        String sql1=
                    "select DonBaoDuong.id,BienSo,NgayBatDau,NgayHoanThanh,idNhanVienLapDon,Ten,TongTien from DonBaoDuong,NhanVien\n"+ 
                    "Where DonBaoDuong.idNhanVienLapDon=NhanVien.id Order by TongTien";
        String sql2=
                    "select DonBaoDuong.id,BienSo,NgayBatDau,NgayHoanThanh,idNhanVienLapDon,Ten,TongTien from DonBaoDuong,NhanVien\n"+ 
                    "Where DonBaoDuong.idNhanVienLapDon=NhanVien.id Order by TongTien desc";
        int i_sx=(int)jComboBox_SapXep.getSelectedIndex();
        if (i_sx==1) sql=sql1;
           else  if (i_sx==2) sql=sql2;
        //---------------------xử lý khoảng giá tiền------------------------------
        String g1=jTextField_Gia1.getText();
        String g2=jTextField_Gia2.getText();
        long gia1=0,gia2=0;
        //-----------------------Xử lý Trnạg thái đơn bao dưỡng-------------------------------------
       // String tt=(String)jComboBox_TrangThai.getSelectedItem();
        int i_tt=(int)jComboBox_TrangThai.getSelectedIndex();
        
        Vector vt=null;
        boolean kt=true;
        try{
            PreparedStatement ps=cn.prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            while (rs.next()){
                vt=new Vector();
                kt=true;
                String aa=rs.getString(1);
                if (aa.contains(s)){
                    vt.add(aa);
                    vt.add(rs.getString(2));
                    //-----------Xử Lý So Sánh Ngày Tháng Năm---------
                    SimpleDateFormat f= new SimpleDateFormat("dd/MM/yyyy");
                    String date1=f.format(rs.getDate(3));
                    String D1[]=date1.split("/");
                    //System.out.println(date1);
                    String date2=f.format(rs.getDate(4));
                    if (ControllerAdmin.Compare_Date(Integer.parseInt(D1[0]),Integer.parseInt(D1[1]),Integer.parseInt(D1[2]),
                            Integer.parseInt((String)jComboBox_Ngay1.getSelectedItem()),Integer.parseInt((String)jComboBox_Thang1.getSelectedItem()),
                            Integer.parseInt((String)jComboBox_Nam1.getSelectedItem()))!=-1 &&
                        ControllerAdmin.Compare_Date(Integer.parseInt(D1[0]),Integer.parseInt(D1[1]),Integer.parseInt(D1[2]),
                            Integer.parseInt((String)jComboBox_Ngay2.getSelectedItem()),Integer.parseInt((String)jComboBox_Thang2.getSelectedItem()),
                            Integer.parseInt((String)jComboBox_Nam2.getSelectedItem()))!=1 ){
                         vt.add(date1);
                         vt.add(date2);
                        // System.out.println("oke");
                     }
                    else kt=false;
                     //-----------Xử Lý So Sánh Ngày Tháng Năm---------end
                    boolean kt_HT=true;
                    String D2[]=date2.split("/");
                    if ( (ControllerAdmin.Compare_Date(Integer.parseInt(D1[0]),Integer.parseInt(D1[1]),Integer.parseInt(D1[2]),
                            Integer.parseInt(D2[0]),Integer.parseInt(D2[1]),Integer.parseInt(D2[2]) ))==1){
                        kt_HT=false;
                    }
                    //System.out.println(a1);
                    if ( (kt_HT && i_tt==1) || (!kt_HT && i_tt==2) || i_tt==0){
                        if (kt_HT) vt.add("Hoàn Thành");
                        else vt.add("Chưa Hoàn Thành");
                    }
                    else kt=false;
                     //-----------Xử Lý Nhan Vien---------
                    String a=rs.getString(5);
                    String b=rs.getString(6);
                    if (a.equals(id_nv) || i==0) {
                        vt.add(a);
                        vt.add(b);
                    }
                    else kt=false;
                     //-----------Xử Lý Tong Tien---------
                    String a2=rs.getString(7);
                    if (kt_HT && kt){
                        System.out.println(i_tt);
                        String b2=a2;
                        b2=b2.substring(0,b2.length()-5);
                        long gia=Long.parseLong(b2);
                        if (!g1.equals("") && !g2.equals("") )
                        {
                              gia1=Long.parseLong(g1);
                              gia2=Long.parseLong(g2);
                              if (gia>=gia1 && gia<=gia2) {
                                  vt.add(a2);
                                  dt+=gia;
                              }
                              else kt=false;
                        }
                        else if (g1.equals("") && !g2.equals("") ){
                              gia2=Long.parseLong(g2);
                              if (gia<=gia2) {
                                  vt.add(a2);
                                  dt+=gia;
                              }
                              else kt=false;
                        }
                        else if (!g1.equals("") && g2.equals("") ){
                              gia1=Long.parseLong(g1);
                              if (gia>=gia1){
                                  vt.add(a2);
                                  dt+=gia;
                              }
                              else kt=false;
                        }
                        else if (g1.equals("") && g2.equals("")) {
                            vt.add(a2);
                            dt+=gia;
                        }
                        //System.out.println(gia);
                    }
                    else if (!kt_HT && !(g1.equals("") && g2.equals(""))) {
                        jTextField_TongDT.setText("");
                        kt=false;
                    }
                    else if (i_tt==0 && kt_HT) vt.add(a2);
                    else if (i_tt==0 && !kt_HT) vt.add("");
                    //vt.add(rs.getString(7));
                    if (kt) dtm.addRow(vt);
                }
            }
            jTable_DanhSachDBD.setModel(dtm);
            jTextField_TongDT.setText(Long.toString(dt));
            rs.close();
            ps.close();
            cn.close();
        }
        catch (SQLException ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jTextField_FindIDKeyReleased

    
     private void importDataTKDBD(){
        DefaultTableModel dtm= (DefaultTableModel) jTable_DanhSachDBD.getModel();
        Connection cn=ModelAdmin.connectMSSQL();
        dtm.setNumRows(0);
        long dt=0;
        //------------------------ Xử lý Mã NV lập----------------------------
        String id_nv=(String)jComboBox_IDNV1.getSelectedItem();
        String id_nv1[]=id_nv.split("\\s");
        id_nv=id_nv1[0];
        int i=(int)jComboBox_IDNV1.getSelectedIndex();
        //---------------------Xử lý sắp xếp-------------------------
        String sql=
                    "select DonBaoDuong.id,BienSo,NgayBatDau,NgayHoanThanh,idNhanVienLapDon,Ten,TongTien from DonBaoDuong,NhanVien\n"+
                   "Where DonBaoDuong.idNhanVienLapDon=NhanVien.id";
        String sql1=
                    "select DonBaoDuong.id,BienSo,NgayBatDau,NgayHoanThanh,idNhanVienLapDon,Ten,TongTien from DonBaoDuong,NhanVien\n"+ 
                    "Where DonBaoDuong.idNhanVienLapDon=NhanVien.id Order by TongTien";
        String sql2=
                    "select DonBaoDuong.id,BienSo,NgayBatDau,NgayHoanThanh,idNhanVienLapDon,Ten,TongTien from DonBaoDuong,NhanVien\n"+ 
                    "Where DonBaoDuong.idNhanVienLapDon=NhanVien.id Order by TongTien desc";
        int i_sx=(int)jComboBox_SapXep.getSelectedIndex();
        if (i_sx==1) sql=sql1;
           else  if (i_sx==2) sql=sql2;
        //---------------------xử lý khoảng giá tiền------------------------------
        String g1=jTextField_Gia1.getText();
        String g2=jTextField_Gia2.getText();
         //System.out.println(g1+" "+g2);
        long gia1=0,gia2=0;
       
        System.out.println(gia1+" "+gia2);

        //-----------------------Xử lý Trnạg thái đơn bao dưỡng-------------------------------------
       // String tt=(String)jComboBox_TrangThai.getSelectedItem();
        int i_tt=(int)jComboBox_TrangThai.getSelectedIndex();
        
        //---------------------------------Xử Lý Xuất Bảng TK------------------------------------
        Vector vt=null;
        boolean kt=true;
        try{
            PreparedStatement ps=cn.prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            while (rs.next()){
                vt=new Vector();
                kt=true;
                vt.add(rs.getString(1)); 
                vt.add(rs.getString(2));
                //-----------Xử Lý So Sánh Ngày Tháng Năm---------
                SimpleDateFormat f= new SimpleDateFormat("dd/MM/yyyy");
                String date1=f.format(rs.getDate(3));
                String D1[]=date1.split("/");
                //System.out.println(date1);
                String date2=f.format(rs.getDate(4));
                if (ControllerAdmin.Compare_Date(Integer.parseInt(D1[0]),Integer.parseInt(D1[1]),Integer.parseInt(D1[2]),
                        Integer.parseInt((String)jComboBox_Ngay1.getSelectedItem()),Integer.parseInt((String)jComboBox_Thang1.getSelectedItem()),
                        Integer.parseInt((String)jComboBox_Nam1.getSelectedItem()))!=-1 &&
                    ControllerAdmin.Compare_Date(Integer.parseInt(D1[0]),Integer.parseInt(D1[1]),Integer.parseInt(D1[2]),
                        Integer.parseInt((String)jComboBox_Ngay2.getSelectedItem()),Integer.parseInt((String)jComboBox_Thang2.getSelectedItem()),
                        Integer.parseInt((String)jComboBox_Nam2.getSelectedItem()))!=1 ){
                     vt.add(date1);
                     vt.add(date2);
                    // System.out.println("oke");
                 }
                else kt=false;
                 //-----------Xử Lý So Sánh Ngày Tháng Năm---------end
                boolean kt_HT=true;
                String D2[]=date2.split("/");
                if ( (ControllerAdmin.Compare_Date(Integer.parseInt(D1[0]),Integer.parseInt(D1[1]),Integer.parseInt(D1[2]),
                        Integer.parseInt(D2[0]),Integer.parseInt(D2[1]),Integer.parseInt(D2[2]) ))==1){
                    kt_HT=false;
                }
                //System.out.println(a1);
                if ( (kt_HT && i_tt==1) || (!kt_HT && i_tt==2) || i_tt==0){
                    if (kt_HT) vt.add("Hoàn Thành");
                    else vt.add("Chưa Hoàn Thành");
                }
                else kt=false;
                 //-----------Xử Lý Nhan Vien---------
                String a=rs.getString(5);
                String b=rs.getString(6);
                if (a.equals(id_nv) || i==0) {
                    vt.add(a);
                    vt.add(b);
                }
                else kt=false;
                 //-----------Xử Lý Tong Tien---------
                String a2=rs.getString(7);
                if (kt_HT && kt){
                    System.out.println(i_tt);
                    String b2=a2;
                    b2=b2.substring(0,b2.length()-5);
                    long gia=Long.parseLong(b2);
                    if (!g1.equals("") && !g2.equals("") )
                    {
                          gia1=Long.parseLong(g1);
                          gia2=Long.parseLong(g2);
                          if (gia>=gia1 && gia<=gia2) {
                              vt.add(a2);
                              dt+=gia;
                          }
                          else kt=false;
                    }
                    else if (g1.equals("") && !g2.equals("") ){
                          gia2=Long.parseLong(g2);
                          if (gia<=gia2) {
                              vt.add(a2);
                              dt+=gia;
                          }
                          else kt=false;
                    }
                    else if (!g1.equals("") && g2.equals("") ){
                          gia1=Long.parseLong(g1);
                          if (gia>=gia1){
                              vt.add(a2);
                              dt+=gia;
                          }
                          else kt=false;
                    }
                    else if (g1.equals("") && g2.equals("")) {
                        vt.add(a2);
                        dt+=gia;
                    }
                    //System.out.println(gia);
                }
                else if (!kt_HT && !(g1.equals("") && g2.equals(""))) {
                    jTextField_TongDT.setText("");
                    kt=false;
                }
                else if (i_tt==0 && kt_HT) vt.add(a2);
                else if (i_tt==0 && !kt_HT) vt.add("");
                //vt.add(rs.getString(7));
                if (kt) dtm.addRow(vt);
            }
           jTable_DanhSachDBD.setModel(dtm);
           jTextField_TongDT.setText(Long.toString(dt));
           rs.close();
           ps.close();
           cn.close();
        }
        catch (SQLException ex){
            ex.printStackTrace();
        }
     }
     
      private void importDataMaNV(){
       Connection cn=ModelAdmin.connectMSSQL();
       String sql="select id,Ten from NhanVien";
       try{
           PreparedStatement ps=cn.prepareStatement(sql);
           ResultSet rs=ps.executeQuery();
           while (rs.next()){
               jComboBox_IDNV1.addItem(rs.getString(1)+" - "+rs.getString(2));// add này vào thống kê bảo dưỡng
           }
           rs.close();
           ps.close();
           cn.close();
       }
       catch (SQLException ex){
           ex.printStackTrace();
       }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_XNDBD;
    private javax.swing.JComboBox<String> jComboBox_IDNV1;
    private javax.swing.JComboBox<String> jComboBox_Nam1;
    private javax.swing.JComboBox<String> jComboBox_Nam2;
    private javax.swing.JComboBox<String> jComboBox_Ngay1;
    private javax.swing.JComboBox<String> jComboBox_Ngay2;
    private javax.swing.JComboBox<String> jComboBox_SapXep;
    private javax.swing.JComboBox<String> jComboBox_Thang1;
    private javax.swing.JComboBox<String> jComboBox_Thang2;
    private javax.swing.JComboBox<String> jComboBox_TrangThai;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel_pc1;
    private javax.swing.JLabel jLabel_pc2;
    private javax.swing.JLabel jLabel_pc3;
    private javax.swing.JLabel jLabel_pc4;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_DanhSachDBD;
    private javax.swing.JTextField jTextField_FindID;
    private javax.swing.JTextField jTextField_Gia1;
    private javax.swing.JTextField jTextField_Gia2;
    private javax.swing.JTextField jTextField_TongDT;
    // End of variables declaration//GEN-END:variables
}
